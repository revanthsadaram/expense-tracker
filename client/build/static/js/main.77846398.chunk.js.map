{"version":3,"sources":["Components/Header.js","Context/AppReducer.js","Context/GlobalState.js","utils/format.js","Components/Balance.js","Components/IncomeExpenses.js","Components/Transaction.js","Components/TransactionList.js","Components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","numberWithCommas","x","toString","replace","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","useEffect","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","vlaue","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77846398.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'GET_TRANSACTIONS':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                transactions: action.payload\r\n            }\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\r\n            }\r\n\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.payload]\r\n            }\r\n\r\n        case 'TRANSACTION_ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react'\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n//Initial state\r\nconst initialState = {\r\n    transactions: [],\r\n    error: null,\r\n    loading: true\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    //Actions\r\n    async function getTransactions() {\r\n        try {\r\n            const res = await axios.get('/api/v1/transactions');\r\n\r\n            dispatch({\r\n                type: 'GET_TRANSACTIONS',\r\n                payload: res.data.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    async function deleteTransaction(id) {\r\n        try {\r\n            await axios.delete(`api/v1/transactions/${id}`);\r\n            dispatch({\r\n                type: 'DELETE_TRANSACTION',\r\n                payload: id\r\n            });            \r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    async function addTransaction(transaction) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/api/v1/transactions', transaction, config);\r\n            dispatch({\r\n                type: 'ADD_TRANSACTION',\r\n                payload: res.data.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions:state.transactions,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        getTransactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>)\r\n}\r\n","export function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import React, { useContext} from 'react'\r\nimport { GlobalContext } from '../Context/GlobalState';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>${numberWithCommas(total)}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../Context/GlobalState';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\n\r\nexport const IncomeExpenses = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    \r\n    const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n  \r\n    return (\r\n        <div className = \"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p id=\"money-plus\" className=\"money plus\">${numberWithCommas(income)}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p id=\"money-minus\" className=\"money minus\">${numberWithCommas(expense)}</p>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../Context/GlobalState';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const Transaction = ({transaction}) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n    \r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n            {transaction.text}<span>{sign}${numberWithCommas(Math.abs(transaction.amount))}</span>\r\n            <button onClick={() => deleteTransaction(transaction._id)} className=\"delete-btn\">x</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Transaction } from './Transaction';\r\n\r\nimport { GlobalContext } from '../Context/GlobalState';\r\n\r\n\r\nexport const TransactionList = () => {\r\n    const { transactions,getTransactions } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        getTransactions();\r\n        //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    // console.log(transactions);\r\n\r\n    return (\r\n        <div>\r\n            <h3>History</h3>\r\n            <ul id=\"list\" className=\"list\">\r\n                {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}                \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useContext } from 'react'\r\nimport { GlobalContext } from '../Context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n\r\n        addTransaction(newTransaction)\r\n    }\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                <label htmlFor=\"text\">Text</label>\r\n                <input type=\"text\" vlaue = {text} onChange={(e) => setText(e.target.value)} id=\"text\" placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                <label htmlFor=\"amount\"\r\n                    >Amount <br />\r\n                    (negative - expense, positive - income)</label\r\n                >\r\n                <input type=\"number\" vlaue = {amount} onChange={(e) => setAmount(e.target.value)} id=\"amount\" placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Header } from './Components/Header';\nimport { Balance } from './Components/Balance';\nimport { IncomeExpenses } from './Components/IncomeExpenses';\nimport { TransactionList } from './Components/TransactionList';\nimport { AddTransaction } from './Components/AddTransaction';\n\nimport { GlobalProvider } from './Context/GlobalState';\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />        \n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}